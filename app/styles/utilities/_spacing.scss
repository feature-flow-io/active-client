@each $breakpoint in map-keys($breakpoints) {
  @include breakpoint($breakpoint) {
    $bp-sort: breakpoint-infix($breakpoint, $breakpoints);

    @each $prop, $initial in (margin: m, padding: p) {
      @each $scale, $size in $spacer-map {
        .#{$bp-sort}#{$initial}-#{$scale} {
          #{$prop}: $size !important;
        }

        .#{$bp-sort}#{$initial}t-#{$scale},
        .#{$bp-sort}#{$initial}y-#{$scale} {
          #{$prop}-top: $size !important;
        }

        .#{$bp-sort}#{$initial}b-#{$scale},
        .#{$bp-sort}#{$initial}y-#{$scale} {
          #{$prop}-bottom: $size !important;
        }

        .#{$bp-sort}#{$initial}l-#{$scale},
        .#{$bp-sort}#{$initial}x-#{$scale} {
          #{$prop}-left: $size !important;
        }

        .#{$bp-sort}#{$initial}r-#{$scale},
        .#{$bp-sort}#{$initial}x-#{$scale} {
          #{$prop}-right: $size !important;
        }
      }
    }

    @each $scale, $size in $spacer-map {
      @if $scale != 0 {
        .#{$bp-sort}-ml-#{$scale},
        .#{$bp-sort}-mx-#{$scale} {
          margin-left: -$size !important;
        }

        .#{$bp-sort}-mr-#{$scale},
        .#{$bp-sort}-mx-#{$scale} {
          margin-right: -$size !important;
        }
      }
    }
  }
}

.mx-auto {
  margin-left: auto !important;
  margin-right: auto !important;
}
